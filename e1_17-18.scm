(define (mult a b)
  (cond ((= b 0) 0)
        (else (+ a (mult a (- b 1))))))
(define (fast-mult a b)
  (cond ((= b 0) 0)
        ((even? b) (fast-mult (double a) (halve b)))
        (else (+ a (fast-mult a (- b 1))))))
(define (even? n)
  (= (remainder n 2) 0))
(define (double n) (* n 2))
(define (halve n) (/ n 2))
(define (fast-mult-i a b)
  (fast-mult-iter a b 0))
(define (fast-mult-iter a b n)
  (cond ((= b 0) n)
        ((even? b) (fast-mult-iter (double a) (halve b) n))
        (else (fast-mult-iter a (- b 1) (+ a n)))))
